---

- name: add openvpn key
  apt_key:
    url: https://swupdate.openvpn.net/repos/repo-public.gpg
    state: present

- name: add openvpn repo
  apt_repository:
    repo: "deb http://build.openvpn.net/debian/openvpn/stable {{ ansible_distribution_release }} main"
    filename: "openvpn"
    state: present

- name: install packages
  apt:
    name: "{{item}}"
    state: latest
    dpkg_options: 'force-confnew,force-confdef'
    autoclean: yes
    autoremove: yes
    update_cache: yes
    cache_valid_time: 3600
  with_items:
  - openvpn
  - openssl
  - easy-rsa

- name: check for easy_rsa existence
  stat:
    path: "{{ easyrsa_dir }}/easy-rsa"
  register: easy_rsa

# Block start initialize easy-rsa
- block:
  - name: copy easy_rsa
    copy:
      src: /usr/share/easy-rsa
      dest: "{{ easyrsa_dir }}"
      owner: "{{ easyrsa_user }}"
      group: "{{ easyrsa_user }}"
      mode: 0700

  - name: manipulate easy-rsa vars
    include: edit_vars.yml

  - name: link openssl.cnf
    file:
      src: "{{ easyrsa_dir }}/easy-rsa/openssl-1.0.0.cnf"
      path: "{{ easyrsa_dir }}/easy-rsa/openssl.cnf"
      owner: "{{ easyrsa_user }}"
      group: "{{ easyrsa_user }}"
      state: link

  - name: create keys folder
    file:
      path: "{{ easyrsa_dir }}/easy-rsa/keys"
      state: directory
      owner: "{{ easyrsa_user }}"
      group: "{{ easyrsa_user }}"
      mode: 0644

  - name: clean all
    shell: |
      source ./vars
      ./clean-all
    args:
      chdir: "{{ easyrsa_dir }}/easy-rsa/"
      executable: /bin/bash

  - name: build-ca
    shell: |
      source ./vars
      export EASY_RSA="${EASY_RSA:-.}"
      "$EASY_RSA/pkitool" --initca {{ easyrsa_key_cn }}
    args:
      chdir: "{{ easyrsa_dir }}/easy-rsa/"
      executable: /bin/bash

  - name: build-key-server
    shell: |
      source ./vars
      export EASY_RSA="${EASY_RSA:-.}"
      "$EASY_RSA/pkitool" --server server
    args:
      chdir: "{{ easyrsa_dir }}/easy-rsa/"
      executable: /bin/bash

  - name: build-dh
    shell: |
      source ./vars
      ./build-dh
    args:
      chdir: "{{ easyrsa_dir }}/easy-rsa/"
      executable: /bin/bash

  - name: build tls-auth key
    shell: openvpn --genkey --secret keys/ta.key
    args:
      chdir: "{{ easyrsa_dir }}/easy-rsa/"
      executable: /bin/bash
    when: easyrsa_use_tls_auth

  # Block condition initialize easy-rsa
  when: easy_rsa.stat.isdir is not defined
# Block end initialize easy-rsa

- name: iterate clients
  include: client.yml
  with_items: "{{ easyrsa_clients }}"
  loop_control:
    loop_var: client

...
